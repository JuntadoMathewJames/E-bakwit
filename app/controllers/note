def evacuate ## post
        evac_center = EvacCenter.find(params[:evac_id])      
        if(Evacuee.find_by(family_id: params[:family_id]) == nil )
            evacuee = Evacuee.new 
            evacuee.family_id = params[:family_id]
            evacuee.disaster_id = 1
            evacuee.date_in = Time.now
            evacuee.date_out = nil
            evacuee.evac_id = evac_center.id
            
            puts 'if 1'
            respond_to do |format|
                
                if evacuee.save 
                    arr = params[:mem];
                    if arr != nil
                        for i in 0..arr.length-1 do
                           
                            family_mem = FamilyMember.find(arr[i])
                            family_mem.update_column(:evacuee_id, evacuee.id )
                        end
                        
                        myFam = Family.find(params[:family_id])
                        if(myFam.is_evacuated != true )
                            
                            myFam.update_attribute(:is_evacuated, true)
                        end
                        flash[:notice] = "SUCCESSFULLY LOGGED!"
                        redirect_to "/evac_centers/#{params[:evac_id]}/log", notice: "SUCCESS!"
                    else
                        puts 'nil'
                    end 
                    puts 'save' 
                else
                    puts 'error'
                end
            end
        elsif(Evacuee.find_by("evac_id != ? AND family_id = ? AND date_out IS NOT NULL", params[:evac_id], params[:family_id]))
            evacuee = Evacuee.new 
            evacuee.family_id = params[:family_id]
            evacuee.disaster_id = 1
            evacuee.date_in = Time.now
            evacuee.date_out = nil
            evacuee.evac_id = evac_center.id
            puts "elsif 1<<<<<<<<<<<"
            
            respond_to do |format|
                
                if evacuee.save 
                    arr = params[:mem];
                    if arr != nil
                        for i in 0..arr.length-1 do
                           
                            family_mem = FamilyMember.find(arr[i])
                            family_mem.update_column(:evacuee_id, evacuee.id )
                        end
                        
                        myFam = Family.find(params[:family_id])
                        if(myFam.is_evacuated != true )
                            
                            myFam.update_attribute(:is_evacuated, true)
                        end
                        flash[:notice] = "SUCCESSFULLY LOGGED!"
                        redirect_to "/evac_centers/#{params[:evac_id]}/log", notice: "SUCCESS!"
                    else
                        puts 'nil'
                    end 
                    puts 'save' 
                else
                    puts 'error'
                end
            end
        elsif(Evacuee.find_by("evac_id != ? AND family_id = ? AND date_out IS NULL", params[:evac_id], params[:family_id] ))
            puts 'else if 2'
            evacuee = Evacuee.new 
            evacuee.family_id = params[:family_id]
            evacuee.disaster_id = 1
            evacuee.date_in = Time.now
            evacuee.date_out = nil
            evacuee.evac_id = evac_center.id
            
            
            respond_to do |format|
                
                if evacuee.save 
                    arr = params[:mem];
                    if arr != nil
                        for i in 0..arr.length-1 do
                           
                            family_mem = FamilyMember.find(arr[i])
                            family_mem.update_column(:evacuee_id, evacuee.id )
                        end
                        
                        myFam = Family.find(params[:family_id])
                        if(myFam.is_evacuated != true )
                            
                            myFam.update_attribute(:is_evacuated, true)
                        end
                        flash[:notice] = "SUCCESSFULLY LOGGED!"
                        redirect_to "/evac_centers/#{params[:evac_id]}/log", notice: "SUCCESS!"
                    else
                        puts 'nil'
                    end 
                    puts 'save' 
                else
                    puts 'error'
                end
            end
        elsif(Evacuee.find_by("evac_id = ? AND family_id = ? AND date_out IS NOT NULL",params[:evac_id],params[:family_id]))
            arr = params[:mem];
            puts 'elsif 3'
            existingEvacuee = Evacuee.find_by(family_id: params[:family_id])
            if arr != nil
                for i in 0..arr.length-1 do
       
                    family_mem = FamilyMember.find(arr[i])
                    family_mem.update_column(:evacuee_id, existingEvacuee.id )

                end 
                
                myFam = Family.find(params[:family_id])
                if(myFam.is_evacuated != true )
                   
                    myFam.update_attribute(:is_evacuated, true)
                end
                flash[:notice] = "SUCCESSFULLY LOGGED!"
                redirect_to "/evac_centers/#{params[:evac_id]}/log"

            end
        elsif(Evacuee.find_by("evac_id = ? AND family_id = ? AND date_out IS NULL", params[:evac_id], params[:family_id]))
            arr = params[:mem];
            puts 'elsif 4'
            existingEvacuee = Evacuee.find_by(family_id: params[:family_id])
            if arr != nil
                for i in 0..arr.length-1 do
       
                    family_mem = FamilyMember.find(arr[i])
                    family_mem.update_column(:evacuee_id, existingEvacuee.id )

                end 
                
                myFam = Family.find(params[:family_id])
                if(myFam.is_evacuated != true )
                   
                    myFam.update_attribute(:is_evacuated, true)
                end
                flash[:notice] = "SUCCESSFULLY LOGGED!"
                redirect_to "/evac_centers/#{params[:evac_id]}/log"

            else
                puts 'nil'
            end 
        
        else
            puts 'else'
        end
    end